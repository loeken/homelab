{{ if .Values.authelia.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: authelia
  namespace: argocd
spec:
  destination:
    namespace: authelia
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: authelia
    helm:
      values: |
        secret:
          existingSecret: authelia
        persistence:
          enabled: true
          mountPath: /config
          storageClass: local-path
          accessMode: ReadWriteMany
        domain: {{ .Values.domain }}
        pod:
          replicas: 1
          kind: StatefulSet
          revisionHistoryLimit: 2
        configMap:
          log:
            level: info
          authentication_backend:
            ldap:
              enabled: false
            file:
              enabled: true
          default_redirection_url: https://auth.{{ .Values.domain }}
          session:
            redis:
              enabled: false
            domain: {{ .Values.domain }}
            expiration: 3600
            inactivity: 300
          storage:
            local:
              enabled: true
            postgres:
              enabled: false
          notifier:
            filesystem:
              enabled: {{ .Values.authelia.filesystem.enabled }}
              filename: /config/notification.txt
            smtp:
              enabled: {{ .Values.authelia.smtp.enabled }}
              enabledSecret: true
              host: {{ .Values.authelia.smtp.host }}
              port: {{ .Values.authelia.smtp.port }}
              timeout: 5s
              username: {{ .Values.authelia.smtp.username }}
              sender: {{ .Values.authelia.smtp.sender }}
              identifier: {{ .Values.authelia.smtp.host }}
              subject: "[Authelia] {title}"
              startup_check_address: {{ .Values.authelia.smtp.sender }}
              disable_require_tls: false
              disable_html_emails: false
              tls:
                server_name: {{ .Values.authelia.smtp.host }}
                skip_verify: false
                minimum_version: TLS1.2
          identity_providers:
            oidc:
              enabled: false
          theme: dark
          access_control:
            default_policy: deny
            rules:
              - domain: "*.{{ .Values.domain }}"
                policy: bypass
                networks:
                  - 10.42.0.0/16
              - domain: ['jellyfin.{{ .Values.domain }}', 'nextcloud.{{ .Values.domain }}']
                policy: bypass
              - domain: ['ha.{{ .Values.domain }}']
                policy: bypass
                resources:
                  - ^/api.*
                  - ^/auth/token.*
                  - ^/.external_auth=.
                  - ^/service_worker.js
                  - ^/static.*
                  - ^/local.*
                  - ^/hacsfiles.*
                  - ^/frontend_latest.*
              - domain: ['sonarr.{{ .Values.domain }}', 'radarr.{{ .Values.domain }}', 'ha.{{ .Values.domain }}']
                policy: bypass
                resources:
                  - ^/api.*
                  - ^/signalr.*
              - domain: ['vaultwarden.{{ .Values.domain }}']
                policy: bypass
                resources:
                  - ^/api.*
                  - ^/identity/connect/token.*
                  - ^/notifications/hub.*
              - domain: 'rtorrent.{{ .Values.domain }}'
                policy: bypass
                resources:
                  - ^/RPC2.*
              - domain: ['requests.{{ .Values.domain }}']
                policy: one_factor
                subject:
                  - 'group:users'
              - domain: ['ha.{{ .Values.domain }}', 'prowlarr.{{ .Values.domain }}', 'sonarr.{{ .Values.domain }}', 'radarr.{{ .Values.domain }}', 'rtorrent.{{ .Values.domain }}', 'nzbget.{{ .Values.domain }}']
                policy: two_factor
                subject:
                  - 'group:admins'
              - domain: ['whoami.{{ .Values.domain }}', 'harbor.{{ .Values.domain }}', 'ltb-passwd.{{ .Values.domain }}', 'vaultwarden.{{ .Values.domain }}']
                policy: two_factor
                subject:
                  - 'group:users'

        ingress:
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "{{ .Values.clusterIssuer }}"
            external-dns.alpha.kubernetes.io/hostname: "auth.{{ .Values.domain }}."
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
            external-dns.alpha.kubernetes.io/ttl: "120"
          enabled: {{ .Values.authelia.ingress.nginx.enabled }}
          hosts:
            - host: auth.{{ .Values.domain }}
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    port: 80
          tls:
            enabled: true
            secret: auth-tls
    repoURL: https://charts.authelia.com
    targetRevision: 0.8.58
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

{{ end }}